// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Or.hdl

/**
 * Or gate: out = 1 if {a==1 or b==1}, 0 otherwise
 */

CHIP Or {
    IN a, b;
    OUT out;

    PARTS:
    Not(in=a, out=nota);
    Not(in=b, out=notb);
    And(a=nota, b=notb, out=andab);
    Not(in=andab, out=out);
}
/* Implementation note:
   Solved by intuition...
   The canonical representation of two-input OR is
   a.b' + a'.b + a.b.

   The only combination that remains is a=0 b=0.

   Therefore, one can infer that the canonical representation
   of OR is equivalent to the complement of the remaining case,
   i.e. it's (a'.b')'*/
